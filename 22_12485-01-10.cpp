// プログラミング言語:C++
// コンパイル方法:g++ -std=c++17 22_12485-01-10.cpp
// 実行方法:コンパイルで生成したa.outというファイルを実行
// (Ubuntu 20.04.06 LTSで"./a.out"で実行できることを確認した)

/*
実行結果
[入力]
10001101011101101000110101000110101110110100011010
[出力]
abdacadabdaabdacadabda
*/

#include <iostream>
#include <string>
#include <vector>
#include <cmath>
#include <iomanip>
using namespace std;

int main(void){
    string in; //入力を受け取る変数
    string out; //復号結果を入れる変数
    int i = 0;
    int cnt = 0; //0の数を数えるカウンタ変数
    cout << "codewords> ";
    cin >> in; //標準入力の受け取り

    /*
    入力の先頭を見る
    先頭部の復号結果が確定したらその内容を出力変数の末尾に追加して復号した分の入力の先頭部を削除
    これを入力変数が空になるまで繰り返す
    */
    while(in.empty() == 0){
        //もしinの先頭2文字が10なら復号結果の文字列の末尾にaを追加→inから先頭2文字削除
        if(in.at(0) == '1' && in.at(1) == '0'){
            out += 'a';
            in.erase(0,2);
        }
        //もしinの先頭2文字が01なら復号結果の文字列の末尾にbを追加→inから先頭2文字削除
        else if(in.at(0) == '0' && in.at(1) == '0'){
            out += 'b';
            in.erase(0,2);
        }
        //もしinの先頭2文字が11なら先頭の復号結果がcかdかまだ分からない
        else if(in.at(0) == '1' && in.at(1) == '1'){
            //inの先頭2文字が11でinの長さ2なら復号結果はcで確定
            if(in.length() == 2){
                out += 'c';
                in.erase(0,2);
            }
            //inの先頭2文字が11でinの長さ3なら復号結果はdで確定
            else if(in.length() == 3){
                out += 'd';
                in.erase(0,3);
            }
            //inの先頭2文字が11でその次の文字が1なら先頭に110はできることがないのでcで確定
            else if(in.at(2) == '1'){
                out += 'c';
                in.erase(0,2);
            }
            //inの先頭2文字が11でその次の文字が0なら、そこから0が何個続くかを調べる
            //もし先頭2文字の11が'c'を意味する11ならその後0がいくら続いても必ず連続して続く0の数は偶数個になるはず(110以外で0が現れるときは必ず00と2セットで0が現れるため)
            //もし先頭2文字の11がその次の0と合わせて'd'を意味するなら"末尾の0が1つ+bを表す00がn個"で必ず連続して続く0の数は奇数個になるはず
            //よって0が何個かを数えてその数の偶奇によって復号を変えればよい
            else if(in.at(2) == '0' && in.length()> 3){
                while(i<=in.length()-2){
                    if(in.at(2+i) != '0'){
                        break;
                    }
                    if(in.at(2+cnt) == '0'){
                        cnt++;
                    }
                    i++;
                }
                //11のあとに0が偶数個続いていたならcを復号結果末尾に追加して入力から先頭2文字を削除
                if(cnt%2 == 0){
                out += 'c';
                in.erase(0,2);
                }
                //11のあとに0が奇数個続いていたならdを復号結果末尾に追加して入力から先頭3文字を削除
                if(cnt%2 == 1){
                out += 'd';
                in.erase(0,3);
                }
                //iとcntをリセット
                i = 0;
                cnt = 0;
            }
        }
    }

    cout << "symbols: ";
    cout << out << endl; //復号結果を出力

    return 0;
}